service: reservation-server

functions:
  createReservation:
    handler: reservations.createReservation
    events:
      - httpApi:
          path: /reservation
          method: POST
  getReservations:
    handler: reservations.getReservations
    events:
      - httpApi:
          path: /reservation
          method: GET
  deleteReservations:
    handler: reservations.deleteReservation
    events:
      - httpApi:
          path: /reservation
          method: DELETE
  checkReservation:
    handler: reservations.checkReservation
    events:
      - httpApi:
          path: /checkReservation
          method: POST

resources:
  Resources:
    VipTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-vipTable-${sls:stage}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: uuid
            AttributeType: S
        KeySchema:
          - AttributeName: uuid
            KeyType: HASH
    ReservationTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: dayval
            AttributeType: N
          - AttributeName: uuid
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: dayval
            KeyType: HASH
          - AttributeName: uuid
            KeyType: RANGE
        TableName: ${self:service}-reservationTable-${sls:stage}
    LayoutTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-layoutTable-${sls:stage}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: uuid
            AttributeType: S
        KeySchema:
          - AttributeName: uuid
            KeyType: HASH

provider:
  name: aws
  httpApi:
    cors: true
  runtime: nodejs16.x
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "dynamodb:PutItem"
            - "dynamodb:Get*"
            - "dynamodb:Scan*"
            - "dynamodb:Query"
            - "dynamodb:UpdateItem"
            - "dynamodb:DeleteItem"
          Resource:
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:service}-reservationTable-${sls:stage}
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:service}-vipTable-${sls:stage}
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:service}-layoutTable-${sls:stage}
  environment:
    DYNAMODB_RESERVATION_TABLE: ${self:service}-reservationTable-${sls:stage}
    DYNAMODB_VIP_TABLE: ${self:service}-vipTable-${sls:stage}
    DYNAMODB_LAYOUT_TABLE: ${self:service}-layoutTable-${sls:stage}
    twilioSID: ${ssm:/twiliosid}
    twilioAuth: ${ssm:/twilioauth}
